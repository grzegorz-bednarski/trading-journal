# Generated by Django 5.0.9 on 2024-10-05 20:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('markets', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('broker', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='accounts', to='markets.broker')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket', models.PositiveBigIntegerField()),
                ('volume', models.DecimalField(decimal_places=4, max_digits=10)),
                ('opened_at', models.DateTimeField()),
                ('open_price', models.DecimalField(decimal_places=4, max_digits=10)),
                ('sl_price', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('tp_price', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('closed_manually', models.BooleanField(blank=True, null=True)),
                ('close_price', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('commissions', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('swaps', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('profit', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('modifications', models.JSONField(default=dict)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='journal.account')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='positions', to='markets.symbol')),
            ],
            options={
                'verbose_name': 'Position',
                'verbose_name_plural': 'Positions',
                'ordering': ['opened_at'],
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('operation', models.CharField(choices=[('DE', 'Deposit'), ('DI', 'Dividends'), ('PC', 'Position Close'), ('WD', 'Withdrawal')], max_length=20)),
                ('created_at', models.DateTimeField()),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='journal.account')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='journal.position')),
            ],
            options={
                'verbose_name': 'History',
                'verbose_name_plural': 'History',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='history',
            constraint=models.UniqueConstraint(condition=models.Q(('position__isnull', False)), fields=('account', 'position'), name='unique_position'),
        ),
    ]
